"use client"

import type React from "react"
import { createContext, useContext, useState, useEffect } from "react"

interface Language {
  code: string
  name: string
  nativeName: string
  flag: string
}

const SUPPORTED_LANGUAGES: Language[] = [
  { code: "en", name: "English", nativeName: "English", flag: "üá∫üá∏" },
  { code: "hi", name: "Hindi", nativeName: "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä", flag: "üáÆüá≥" },
  { code: "bn", name: "Bengali", nativeName: "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ", flag: "üáßüá©" },
  { code: "te", name: "Telugu", nativeName: "‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å", flag: "üáÆüá≥" },
  { code: "mr", name: "Marathi", nativeName: "‡§Æ‡§∞‡§æ‡§†‡•Ä", flag: "üáÆüá≥" },
  { code: "ta", name: "Tamil", nativeName: "‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç", flag: "üáÆüá≥" },
  { code: "gu", name: "Gujarati", nativeName: "‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä", flag: "üáÆüá≥" },
  { code: "kn", name: "Kannada", nativeName: "‡≤ï‡≤®‡≥ç‡≤®‡≤°", flag: "üáÆüá≥" },
  { code: "ml", name: "Malayalam", nativeName: "‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç", flag: "üáÆüá≥" },
  { code: "pa", name: "Punjabi", nativeName: "‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä", flag: "üáÆüá≥" },
  { code: "or", name: "Odia", nativeName: "‡¨ì‡¨°‡¨º‡¨ø‡¨Ü", flag: "üáÆüá≥" },
  { code: "as", name: "Assamese", nativeName: "‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ", flag: "üáÆüá≥" },
  { code: "ur", name: "Urdu", nativeName: "ÿßÿ±ÿØŸà", flag: "üáµüá∞" },
  { code: "es", name: "Spanish", nativeName: "Espa√±ol", flag: "üá™üá∏" },
  { code: "fr", name: "French", nativeName: "Fran√ßais", flag: "üá´üá∑" },
  { code: "de", name: "German", nativeName: "Deutsch", flag: "üá©üá™" },
  { code: "it", name: "Italian", nativeName: "Italiano", flag: "üáÆüáπ" },
  { code: "pt", name: "Portuguese", nativeName: "Portugu√™s", flag: "üáµüáπ" },
  { code: "ru", name: "Russian", nativeName: "–†—É—Å—Å–∫–∏–π", flag: "üá∑üá∫" },
  { code: "ja", name: "Japanese", nativeName: "Êó•Êú¨Ë™û", flag: "üáØüáµ" },
  { code: "ko", name: "Korean", nativeName: "ÌïúÍµ≠Ïñ¥", flag: "üá∞üá∑" },
  { code: "zh", name: "Chinese", nativeName: "‰∏≠Êñá", flag: "üá®üá≥" },
  { code: "ar", name: "Arabic", nativeName: "ÿßŸÑÿπÿ±ÿ®Ÿäÿ©", flag: "üá∏üá¶" },
  { code: "th", name: "Thai", nativeName: "‡πÑ‡∏ó‡∏¢", flag: "üáπüá≠" },
  { code: "vi", name: "Vietnamese", nativeName: "Ti·∫øng Vi·ªát", flag: "üáªüá≥" },
]

interface LanguageContextType {
  currentLanguage: Language
  setLanguage: (languageCode: string) => void
  supportedLanguages: Language[]
  t: (key: string) => string
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined)

export function useLanguage() {
  const context = useContext(LanguageContext)
  if (!context) {
    throw new Error("useLanguage must be used within a LanguageProvider")
  }
  return context
}

const translations: Record<string, Record<string, string>> = {
  en: {
    // Navigation
    "nav.dashboard": "Dashboard",
    "nav.analytics": "Analytics",
    "nav.users": "Users",
    "nav.content": "Content",
    "nav.support": "Support",
    "nav.settings": "Settings",
    "nav.logout": "Logout",
    "nav.notifications": "Notifications",
    "nav.profile": "Profile",
    "nav.admin": "Admin",

    // Dashboard
    "dashboard.title": "Dashboard",
    "dashboard.welcome": "Welcome back",
    "dashboard.overview": "Overview",
    "dashboard.activeUsers": "Active Users",
    "dashboard.lessonsCompleted": "Lessons Completed",
    "dashboard.lessonsCompletedToday": "Lessons Completed Today",
    "dashboard.lessonsInProgress": "Lessons in Progress",
    "dashboard.pendingApprovals": "Pending Approvals",
    "dashboard.supportTickets": "Support Tickets",
    "dashboard.totalUsers": "Total Users",
    "dashboard.totalContent": "Total Content",
    "dashboard.totalRevenue": "Total Revenue",
    "dashboard.realTimeActivity": "Real-time Platform Activity",
    "dashboard.realTimeActivityDesc": "Live activity monitoring across the platform",
    "dashboard.lastUpdated": "Last updated",
    "dashboard.recentActivity": "Recent Activity",
    "dashboard.quickStats": "Quick Stats",
    "dashboard.contentItems": "Content Items",
    "dashboard.engagementRate": "Engagement Rate",
    "dashboard.recentContentSubmissions": "Recent Content Submissions",
    "dashboard.systemStatus": "System Status",
    "dashboard.serverStatus": "Server Status",
    "dashboard.database": "Database",
    "dashboard.cdn": "CDN",
    "dashboard.backupStatus": "Backup Status",
    "dashboard.online": "Online",
    "dashboard.healthy": "Healthy",
    "dashboard.active": "Active",
    "dashboard.upToDate": "Up to date",
    "dashboard.fromLastMonth": "from last month",
    "dashboard.fromLastWeek": "from last week",

    // User Management
    "users.title": "User Management",
    "users.addUser": "Add User",
    "users.exportReport": "Export Report",
    "users.searchPlaceholder": "Search users...",
    "users.filterByRole": "Filter by role",
    "users.filterByStatus": "Filter by status",
    "users.bulkActions": "Bulk Actions",
    "users.lock": "Lock",
    "users.unlock": "Unlock",
    "users.delete": "Delete",
    "users.name": "Name",
    "users.email": "Email",
    "users.role": "Role",
    "users.status": "Status",
    "users.lastLogin": "Last Login",
    "users.actions": "Actions",

    // Support
    "support.title": "Support Oversight",
    "support.createTicket": "Create Ticket",
    "support.totalTickets": "Total Tickets",
    "support.openTickets": "Open Tickets",
    "support.resolvedToday": "Resolved Today",
    "support.avgResponseTime": "Average Response Time",
    "support.resolutionRate": "Resolution Rate",
    "support.customerSatisfaction": "Customer Satisfaction",
    "support.firstContactResolution": "First Contact Resolution",
    "support.inProgress": "In Progress",
    "support.preview": "Preview",
    "support.message": "Message",
    "support.edit": "Edit",
    "support.resolve": "Resolve",
    "support.contactUser": "Contact User",

    // Content Management
    "content.title": "Content Management",
    "content.totalDownloads": "Total Downloads",
    "content.contentViews": "Content Views",
    "content.averageRating": "Average Rating",
    "content.activeContent": "Active Content",
    "content.addContent": "Add Content",
    "content.uploadFile": "Upload File",
    "content.category": "Category",
    "content.grade": "Grade",
    "content.subject": "Subject",

    // Analytics
    "analytics.title": "Analytics",
    "analytics.dailyActiveUsers": "Daily Active Users",
    "analytics.lessonsCompleted": "Lessons Completed", 
    "analytics.sessionTime": "Average Session Time",
    "analytics.platformGrowth": "Platform Growth",
    "analytics.userEngagement": "User Engagement Trends",
    "analytics.contentPerformance": "Content Performance",
    "analytics.reports": "Reports",

    // Settings
    "settings.title": "Settings",
    "settings.profile": "Profile Settings",
    "settings.security": "Security Settings",
    "settings.language": "Language Settings",
    "settings.notifications": "Notification Settings",
    "settings.general": "General",
    "settings.appearance": "Appearance",
    "settings.system": "System Settings",
    "settings.changePassword": "Change Password",
    "settings.twoFactor": "Two-Factor Authentication",

    // Common
    "common.save": "Save",
    "common.cancel": "Cancel",
    "common.edit": "Edit",
    "common.delete": "Delete",
    "common.view": "View",
    "common.search": "Search",
    "common.filter": "Filter",
    "common.export": "Export",
    "common.loading": "Loading...",
    "common.error": "Error",
    "common.success": "Success",
    "common.warning": "Warning",
    "common.info": "Information",
    "common.confirm": "Confirm",
    "common.close": "Close",
    "common.back": "Back",
    "common.next": "Next",
    "common.previous": "Previous",
    "common.submit": "Submit",
    "common.upload": "Upload",
    "common.download": "Download",
    "common.refresh": "Refresh",
    "common.actions": "Actions",
    "common.status": "Status",
    "common.date": "Date",
    "common.time": "Time",
    "common.name": "Name",
    "common.description": "Description",
  },
  hi: {
    // Navigation
    "nav.dashboard": "‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°",
    "nav.analytics": "‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£",
    "nav.users": "‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ",
    "nav.content": "‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä",
    "nav.support": "‡§∏‡§π‡§æ‡§Ø‡§§‡§æ",
    "nav.settings": "‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏",
    "nav.logout": "‡§≤‡•â‡§ó ‡§Ü‡§â‡§ü",
    "nav.notifications": "‡§Ö‡§ß‡§ø‡§∏‡•Ç‡§ö‡§®‡§æ‡§è‡§Ç",
    "nav.profile": "‡§™‡•ç‡§∞‡•ã‡§´‡§º‡§æ‡§á‡§≤",
    "nav.admin": "‡§™‡•ç‡§∞‡§∂‡§æ‡§∏‡§ï",

    // Dashboard
    "dashboard.title": "‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°",
    "dashboard.welcome": "‡§µ‡§æ‡§™‡§∏ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à",
    "dashboard.overview": "‡§Ö‡§µ‡§≤‡•ã‡§ï‡§®",
    "dashboard.activeUsers": "‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ",
    "dashboard.lessonsCompleted": "‡§™‡•Ç‡§∞‡•ç‡§£ ‡§™‡§æ‡§†",
    "dashboard.lessonsCompletedToday": "‡§Ü‡§ú ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ï‡§ø‡§è ‡§ó‡§è ‡§™‡§æ‡§†",
    "dashboard.lessonsInProgress": "‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§Æ‡•á‡§Ç ‡§™‡§æ‡§†",
    "dashboard.pendingApprovals": "‡§≤‡§Ç‡§¨‡§ø‡§§ ‡§Ö‡§®‡•Å‡§Æ‡•ã‡§¶‡§®",
    "dashboard.supportTickets": "‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ü‡§ø‡§ï‡§ü",
    "dashboard.totalUsers": "‡§ï‡•Å‡§≤ ‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ",
    "dashboard.totalContent": "‡§ï‡•Å‡§≤ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä",
    "dashboard.totalRevenue": "‡§ï‡•Å‡§≤ ‡§∞‡§æ‡§ú‡§∏‡•ç‡§µ",
    "dashboard.realTimeActivity": "‡§∞‡•Ä‡§Ø‡§≤-‡§ü‡§æ‡§á‡§Æ ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø",
    "dashboard.realTimeActivityDesc": "‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§™‡§∞ ‡§≤‡§æ‡§á‡§µ ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø ‡§®‡§ø‡§ó‡§∞‡§æ‡§®‡•Ä",
    "dashboard.lastUpdated": "‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§Ö‡§™‡§°‡•á‡§ü",
    "dashboard.recentActivity": "‡§π‡§æ‡§≤ ‡§ï‡•Ä ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø",
    "dashboard.quickStats": "‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§Ü‡§Ç‡§ï‡§°‡§º‡•á",
    "dashboard.contentItems": "‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§Ü‡§á‡§ü‡§Æ",
    "dashboard.engagementRate": "‡§∏‡§π‡§≠‡§æ‡§ó‡§ø‡§§‡§æ ‡§¶‡§∞",
    "dashboard.recentContentSubmissions": "‡§π‡§æ‡§≤ ‡§ï‡•Ä ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§∏‡§¨‡§Æ‡§ø‡§∂‡§®",
    "dashboard.systemStatus": "‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§∏‡•ç‡§•‡§ø‡§§‡§ø",
    "dashboard.serverStatus": "‡§∏‡§∞‡•ç‡§µ‡§∞ ‡§∏‡•ç‡§•‡§ø‡§§‡§ø",
    "dashboard.database": "‡§°‡•á‡§ü‡§æ‡§¨‡•á‡§∏",
    "dashboard.cdn": "‡§∏‡•Ä‡§°‡•Ä‡§è‡§®",
    "dashboard.backupStatus": "‡§¨‡•à‡§ï‡§Ö‡§™ ‡§∏‡•ç‡§•‡§ø‡§§‡§ø",
    "dashboard.online": "‡§ë‡§®‡§≤‡§æ‡§á‡§®",
    "dashboard.healthy": "‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
    "dashboard.active": "‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø",
    "dashboard.upToDate": "‡§Ö‡§¶‡•ç‡§Ø‡§§‡§ø‡§§",
    "dashboard.fromLastMonth": "‡§™‡§ø‡§õ‡§≤‡•á ‡§Æ‡§π‡•Ä‡§®‡•á ‡§∏‡•á",
    "dashboard.fromLastWeek": "‡§™‡§ø‡§õ‡§≤‡•á ‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§∏‡•á",

    // User Management
    "users.title": "‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§®",
    "users.addUser": "‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç",
    "users.exportReport": "‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü ‡§®‡§ø‡§∞‡•ç‡§Ø‡§æ‡§§ ‡§ï‡§∞‡•á‡§Ç",
    "users.searchPlaceholder": "‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ ‡§ñ‡•ã‡§ú‡•á‡§Ç...",
    "users.filterByRole": "‡§≠‡•Ç‡§Æ‡§ø‡§ï‡§æ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§´‡§º‡§ø‡§≤‡•ç‡§ü‡§∞ ‡§ï‡§∞‡•á‡§Ç",
    "users.filterByStatus": "‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§´‡§º‡§ø‡§≤‡•ç‡§ü‡§∞ ‡§ï‡§∞‡•á‡§Ç",
    "users.bulkActions": "‡§¨‡§≤‡•ç‡§ï ‡§è‡§ï‡•ç‡§∂‡§®",
    "users.lock": "‡§≤‡•â‡§ï ‡§ï‡§∞‡•á‡§Ç",
    "users.unlock": "‡§Ö‡§®‡§≤‡•â‡§ï ‡§ï‡§∞‡•á‡§Ç",
    "users.delete": "‡§π‡§ü‡§æ‡§è‡§Ç",
    "users.name": "‡§®‡§æ‡§Æ",
    "users.email": "‡§à‡§Æ‡•á‡§≤",
    "users.role": "‡§≠‡•Ç‡§Æ‡§ø‡§ï‡§æ",
    "users.status": "‡§∏‡•ç‡§•‡§ø‡§§‡§ø",
    "users.lastLogin": "‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§≤‡•â‡§ó‡§ø‡§®",
    "users.actions": "‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ‡§è‡§Ç",

    // Support
    "support.title": "‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§®‡§ø‡§∞‡•Ä‡§ï‡•ç‡§∑‡§£",
    "support.createTicket": "‡§ü‡§ø‡§ï‡§ü ‡§¨‡§®‡§æ‡§è‡§Ç",
    "support.totalTickets": "‡§ï‡•Å‡§≤ ‡§ü‡§ø‡§ï‡§ü",
    "support.openTickets": "‡§ñ‡•Å‡§≤‡•á ‡§ü‡§ø‡§ï‡§ü",
    "support.resolvedToday": "‡§Ü‡§ú ‡§π‡§≤ ‡§ï‡§ø‡§è ‡§ó‡§è",
    "support.avgResponseTime": "‡§î‡§∏‡§§ ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§∏‡§Æ‡§Ø",
    "support.resolutionRate": "‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§¶‡§∞",
    "support.customerSatisfaction": "‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§∏‡§Ç‡§§‡•Å‡§∑‡•ç‡§ü‡§ø",
    "support.firstContactResolution": "‡§™‡§π‡§≤‡•á ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®",
    "support.inProgress": "‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§Æ‡•á‡§Ç",
    "support.preview": "‡§™‡•Ç‡§∞‡•ç‡§µ‡§æ‡§µ‡§≤‡•ã‡§ï‡§®",
    "support.message": "‡§∏‡§Ç‡§¶‡•á‡§∂",
    "support.edit": "‡§∏‡§Ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç",
    "support.resolve": "‡§π‡§≤ ‡§ï‡§∞‡•á‡§Ç",
    "support.contactUser": "‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ ‡§∏‡•á ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç",

    // Content Management
    "content.title": "‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§®",
    "content.totalDownloads": "‡§ï‡•Å‡§≤ ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§°",
    "content.contentViews": "‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§¶‡•É‡§∂‡•ç‡§Ø",
    "content.averageRating": "‡§î‡§∏‡§§ ‡§∞‡•á‡§ü‡§ø‡§Ç‡§ó",
    "content.activeContent": "‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä",
    "content.addContent": "‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§ú‡•ã‡§°‡§º‡•á‡§Ç",
    "content.uploadFile": "‡§´‡§º‡§æ‡§á‡§≤ ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç",
    "content.category": "‡§∂‡•ç‡§∞‡•á‡§£‡•Ä",
    "content.grade": "‡§ï‡§ï‡•ç‡§∑‡§æ",
    "content.subject": "‡§µ‡§ø‡§∑‡§Ø",

    // Analytics
    "analytics.title": "‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£",
    "analytics.dailyActiveUsers": "‡§¶‡•à‡§®‡§ø‡§ï ‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ",
    "analytics.lessonsCompleted": "‡§™‡•Ç‡§∞‡•ç‡§£ ‡§™‡§æ‡§†",
    "analytics.sessionTime": "‡§î‡§∏‡§§ ‡§∏‡§§‡•ç‡§∞ ‡§∏‡§Æ‡§Ø",
    "analytics.platformGrowth": "‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§µ‡•É‡§¶‡•ç‡§ß‡§ø",
    "analytics.userEngagement": "‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ ‡§∏‡§π‡§≠‡§æ‡§ó‡§ø‡§§‡§æ ‡§∞‡•Å‡§ù‡§æ‡§®",
    "analytics.contentPerformance": "‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§®",
    "analytics.reports": "‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü",

    // Settings
    "settings.title": "‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏",
    "settings.profile": "‡§™‡•ç‡§∞‡•ã‡§´‡§º‡§æ‡§á‡§≤ ‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏",
    "settings.security": "‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏",
    "settings.language": "‡§≠‡§æ‡§∑‡§æ ‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏",
    "settings.notifications": "‡§Ö‡§ß‡§ø‡§∏‡•Ç‡§ö‡§®‡§æ ‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏",
    "settings.general": "‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø",
    "settings.appearance": "‡§¶‡§ø‡§ñ‡§æ‡§µ‡§ü",
    "settings.system": "‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏",
    "settings.changePassword": "‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° ‡§¨‡§¶‡§≤‡•á‡§Ç",
    "settings.twoFactor": "‡§¶‡•ç‡§µ‡§ø‡§ó‡•Å‡§£‡§ø‡§§ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡•Ä‡§ï‡§∞‡§£",

    // Common
    "common.save": "‡§∏‡§π‡•á‡§ú‡•á‡§Ç",
    "common.cancel": "‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç",
    "common.edit": "‡§∏‡§Ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç",
    "common.delete": "‡§π‡§ü‡§æ‡§è‡§Ç",
    "common.view": "‡§¶‡•á‡§ñ‡•á‡§Ç",
    "common.search": "‡§ñ‡•ã‡§ú‡•á‡§Ç",
    "common.filter": "‡§´‡§º‡§ø‡§≤‡•ç‡§ü‡§∞",
    "common.export": "‡§®‡§ø‡§∞‡•ç‡§Ø‡§æ‡§§",
    "common.loading": "‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...",
    "common.error": "‡§§‡•ç‡§∞‡•Å‡§ü‡§ø",
    "common.success": "‡§∏‡§´‡§≤‡§§‡§æ",
    "common.warning": "‡§ö‡•á‡§§‡§æ‡§µ‡§®‡•Ä",
    "common.info": "‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä",
    "common.confirm": "‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡•á‡§Ç",
    "common.close": "‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡•á‡§Ç",
    "common.back": "‡§µ‡§æ‡§™‡§∏",
    "common.next": "‡§Ö‡§ó‡§≤‡§æ",
    "common.previous": "‡§™‡§ø‡§õ‡§≤‡§æ",
    "common.submit": "‡§ú‡§Æ‡§æ ‡§ï‡§∞‡•á‡§Ç",
    "common.upload": "‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç",
    "common.download": "‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç",
    "common.refresh": "‡§§‡§æ‡§ú‡§º‡§æ ‡§ï‡§∞‡•á‡§Ç",
    "common.actions": "‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ‡§è‡§Ç",
    "common.status": "‡§∏‡•ç‡§•‡§ø‡§§‡§ø",
    "common.date": "‡§§‡§æ‡§∞‡•Ä‡§ñ",
    "common.time": "‡§∏‡§Æ‡§Ø",
    "common.name": "‡§®‡§æ‡§Æ",
    "common.description": "‡§µ‡§ø‡§µ‡§∞‡§£",
  },
  // Add more languages as needed...
}

export function LanguageProvider({ children }: { children: React.ReactNode }) {
  const [currentLanguage, setCurrentLanguage] = useState<Language>(SUPPORTED_LANGUAGES[0])

  useEffect(() => {
    // Load saved language from localStorage
    const savedLanguage = localStorage.getItem("selectedLanguage")
    if (savedLanguage) {
      const language = SUPPORTED_LANGUAGES.find((lang) => lang.code === savedLanguage)
      if (language) {
        setCurrentLanguage(language)
      }
    }
  }, [])

  const setLanguage = (languageCode: string) => {
    console.log("LanguageProvider: Changing language to:", languageCode)
    const language = SUPPORTED_LANGUAGES.find((lang) => lang.code === languageCode)
    if (language) {
      console.log("LanguageProvider: Setting language:", language)
      setCurrentLanguage(language)
      localStorage.setItem("selectedLanguage", languageCode)
    } else {
      console.log("LanguageProvider: Language not found:", languageCode)
    }
  }

  const t = (key: string): string => {
    const languageTranslations = translations[currentLanguage.code] || translations.en
    const translation = languageTranslations[key] || key
    // Debug logging for first few translations
    if (Math.random() < 0.1) {
      console.log(`Translation: ${key} -> ${translation} (${currentLanguage.code})`)
    }
    return translation
  }

  return (
    <LanguageContext.Provider
      value={{
        currentLanguage,
        setLanguage,
        supportedLanguages: SUPPORTED_LANGUAGES,
        t,
      }}
    >
      {children}
    </LanguageContext.Provider>
  )
}
